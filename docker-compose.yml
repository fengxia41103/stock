# docker-compose version
version: '3.3'

# network
networks:
  data:
  management:

# storage
volumes:
  stock-data:
  redis-data:

# computes
services:
  backend-proxy:
    image: nginx
    ports:
      - "8003:80"
    volumes:
      - ./backend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - web
    command: [nginx-debug, '-g', 'daemon off;']
    networks:
      - management

  db:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - stock-data:/var/lib/mysql # persisted volume
      - ./backend/mysql.cnf:/etc/mysql/conf.d/feng.cnf
    environment:
      MYSQL_DATABASE: stock
      MYSQL_USER: fengxia
      MYSQL_PASSWORD: natalie
      MYSQL_ROOT_HOST: "%" # allow remote conn from these hosts
      MYSQL_ROOT_PASSWORD: natalie
    networks:
      - data

  web:
    build:
      context: ./backend
      dockerfile: ./Dockerfile-web
    image: backend_stock
    volumes:
      - ./backend:/code
      - type: bind
        source: ./backend/static
        target: /code/static
    environment:
      PYTHONUNBUFFERED: 1
      DJANGO_DEBUG: 1 # 0 or 1
      MYSQL_DATABASE: stock
      DEPLOY_TYPE: dev # dev or prod
      DJANGO_DB_USER: fengxia
      DJANGO_DB_PWD: natalie
      DJANGO_DB_HOST: db
      DJANGO_DB_PORT: 3306
      DJANGO_REDIS_HOST: redis
      # DJANGO_SUPERUSER_USERNAME: fengxia
      # DJANGO_SUPERUSER_PASSWORD: natalie
      # DJANGO_SUPERUSER_EMAIL: feng_xia41103@hotmail.com
    #command: bash -c "python /code/manage.py migrate --noinput && python /code/manage.py createsuperuser --noinput && python /code/manage.py runserver 0.0.0.0:8001"
    command: bash -c "python /code/manage.py migrate --noinput && python /code/manage.py runserver 0.0.0.0:8001"
    # command:
    #   "python /code/manage.py createsuperuser --noinput && gunicorn -w 1 -t 300 -b 0.0.0.0:8001 --log-level=info fin.wsgi"

    networks:
      - data
      - management
    depends_on:
      - db

  celery:
    image: backend_stock
    environment:
      DJANGO_DEBUG: 1 # 0 or 1
      DEPLOY_TYPE: dev # dev or prod
      DJANGO_DB_USER: fengxia
      DJANGO_DB_PWD: natalie
      DJANGO_DB_HOST: db
      DJANGO_DB_PORT: 3306
      DJANGO_REDIS_HOST: redis
      MYSQL_DATABASE: stock
    command: celery -A fin.celery worker -Q summary,stock,statement,price,news -l INFO
    volumes:
      - ./backend:/code
    networks:
      - data
    depends_on:
      - db
      - redis

  # beat:
  #   image: backend_stock
  #   environment:
  #     DJANGO_DEBUG: 0 # 0 or 1
  #     DEPLOY_TYPE: dev # dev or prod
  #     DJANGO_DB_USER: fengxia
  #     DJANGO_DB_PWD: natalie
  #     DJANGO_DB_HOST: db
  #     DJANGO_DB_PORT: 3306
  #     DJANGO_REDIS_HOST: redis
  #     MYSQL_DATABASE: stock
  #   command: celery -A fin.celery beat
  #   volumes:
  #     - .:/code
  #   networks:
  #     - data
  #   depends_on:
  #     - celery

  redis:
    image: redis
    volumes:
      - redis-data:/data
    networks:
      - data

  frontend:
    image: frontend_stock
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    volumes:
      - ./frontend:/code
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8084:80"
    command: [nginx-debug, '-g', 'daemon off;']
    networks:
      - management
